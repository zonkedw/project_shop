const pool = require('../config/database');
const bcrypt = require('bcryptjs');

const createTables = async () => {
  try {
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await pool.query(`
      CREATE TABLE IF NOT EXISTS users (
        id SERIAL PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        email VARCHAR(255) UNIQUE NOT NULL,
        password VARCHAR(255) NOT NULL,
        is_admin BOOLEAN DEFAULT FALSE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å–æ–∑–¥–∞–Ω–∞');

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É is_admin, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ –±—ã–ª–∞
    await pool.query(`ALTER TABLE users ADD COLUMN IF NOT EXISTS is_admin BOOLEAN DEFAULT FALSE`);
    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ users.is_admin –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
    await pool.query(`
      CREATE TABLE IF NOT EXISTS products (
        id SERIAL PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        price DECIMAL(10,2) NOT NULL,
        original_price DECIMAL(10,2),
        image VARCHAR(500),
        rating DECIMAL(2,1) DEFAULT 0,
        reviews INTEGER DEFAULT 0,
        discount INTEGER DEFAULT 0,
        is_new BOOLEAN DEFAULT FALSE,
        is_popular BOOLEAN DEFAULT FALSE,
        category VARCHAR(100),
        description TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ products —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–æ–≤–æ—Å—Ç–µ–π
    await pool.query(`
      CREATE TABLE IF NOT EXISTS news (
        id SERIAL PRIMARY KEY,
        title VARCHAR(255) NOT NULL,
        content TEXT NOT NULL,
        author_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ news —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –∑–∞–∫–∞–∑–æ–≤
    await pool.query(`
      CREATE TABLE IF NOT EXISTS orders (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
        order_number VARCHAR(50) UNIQUE NOT NULL,
        status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending','confirmed','preparing','delivering','completed','cancelled')),
        subtotal_price DECIMAL(10,2) DEFAULT 0,
        total_price DECIMAL(10,2) NOT NULL,
        total_items INTEGER NOT NULL,
        delivery_method VARCHAR(20) NOT NULL CHECK (delivery_method IN ('courier','pickup')),
        delivery_price DECIMAL(10,2) DEFAULT 0,
        delivery_address TEXT,
        delivery_city VARCHAR(100),
        delivery_postal_code VARCHAR(10),
        payment_method VARCHAR(20) NOT NULL CHECK (payment_method IN ('card','cash')),
        customer_first_name VARCHAR(100) NOT NULL,
        customer_last_name VARCHAR(100),
        customer_email VARCHAR(255) NOT NULL,
        customer_phone VARCHAR(20) NOT NULL,
        discount_code VARCHAR(50),
        discount_amount DECIMAL(10,2) DEFAULT 0,
        comment TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);
    await pool.query(`
      CREATE TABLE IF NOT EXISTS order_items (
        id SERIAL PRIMARY KEY,
        order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,
        product_id INTEGER NOT NULL,
        product_name VARCHAR(255) NOT NULL,
        price DECIMAL(10,2) NOT NULL,
        quantity INTEGER NOT NULL CHECK (quantity > 0),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);
    await pool.query(`ALTER TABLE orders ADD COLUMN IF NOT EXISTS subtotal_price DECIMAL(10,2) DEFAULT 0`);
    await pool.query(`ALTER TABLE orders ADD COLUMN IF NOT EXISTS discount_code VARCHAR(50)`);
    await pool.query(`ALTER TABLE orders ADD COLUMN IF NOT EXISTS discount_amount DECIMAL(10,2) DEFAULT 0`);
    await pool.query(`ALTER TABLE orders ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP`);
    await pool.query(`CREATE INDEX IF NOT EXISTS idx_orders_user_id ON orders(user_id)`);
    await pool.query(`CREATE INDEX IF NOT EXISTS idx_orders_status ON orders(status)`);
    await pool.query(`CREATE INDEX IF NOT EXISTS idx_orders_created_at ON orders(created_at)`);
    await pool.query(`CREATE INDEX IF NOT EXISTS idx_order_items_order_id ON order_items(order_id)`);
    await pool.query(`CREATE INDEX IF NOT EXISTS idx_order_items_product_id ON order_items(product_id)`);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã orders –∏ order_items —Å–æ–∑–¥–∞–Ω—ã/–∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    const adminEmail = process.env.ADMIN_EMAIL || 'admin@foodshop.local';
    const adminPassword = process.env.ADMIN_PASSWORD || 'admin12345';
    const exists = await pool.query('SELECT id FROM users WHERE email = $1', [adminEmail.toLowerCase()]);
    if (exists.rows.length === 0) {
      console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', adminEmail);
      const salt = await bcrypt.genSalt(12);
      const hash = await bcrypt.hash(adminPassword, salt);
      await pool.query(
        'INSERT INTO users (name, email, password, is_admin) VALUES ($1, $2, $3, TRUE)',
        ['Administrator', adminEmail.toLowerCase(), hash]
      );
      console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω (email –∏ –ø–∞—Ä–æ–ª—å –∑–∞–¥–∞–Ω—ã —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)');
    } else {
      console.log('‚ÑπÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', adminEmail);
    }

    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const productsCount = await pool.query('SELECT COUNT(*) FROM products');
    if (parseInt(productsCount.rows[0].count) === 0) {
      console.log('üì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤...');
      
      const testProducts = [
        // –ê–∫—Ü–∏–∏
        ['–•–ª–µ–± –±–µ–ª—ã–π –Ω–∞—Ä–µ–∑–Ω–æ–π', 45.90, 55.90, 'https://korchma.ru/wa-data/public/shop/products/54/02/254/images/1716/1716.970.jpg', 4.5, 128, 18, false, false, '–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ'],
        ['–ú–æ–ª–æ–∫–æ 3.2% 1–ª', 68.90, 78.90, 'https://taumart.ru/upload/dev2fun.imagecompress/webp/iblock/33e/g47lfidq2xumgq2b03e1s59mgmkdi86b.webp', 4.8, 245, 13, false, false, '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'],
        ['–Ø–π—Ü–∞ –∫—É—Ä–∏–Ω—ã–µ –°1 10—à—Ç', 89.90, 105.90, 'https://e3.edimdoma.ru/data/posts/0001/6304/16304-ed4_wide.jpg?1745925245', 4.6, 89, 15, false, false, '–Ø–π—Ü–∞'],
        ['–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ 82.5%', 145.90, 165.90, 'https://img.vkusvill.ru/pim/images/site_LargeWebP/0034c5b6-de1f-4b6a-a71c-c43de0af1b94.webp?1705070428.9978', 4.7, 156, 12, false, false, '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'],
        
        // –ù–æ–≤–∏–Ω–∫–∏
        ['–ö–æ–ª–±–∞—Å–∞ –≤–∞—Ä—ë–Ω–∞—è –î–æ–∫—Ç–æ—Ä—Å–∫–∞—è', 320.90, null, 'https://storum.ru/image/products/276069.png', 4.4, 67, 0, true, false, '–ú—è—Å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'],
        ['–°—ã—Ä —Ç–≤—ë—Ä–¥—ã–π –†–æ—Å—Å–∏–π—Å–∫–∏–π', 280.50, null, 'https://main-cdn.sbermegamarket.ru/big1/hlr-system/189/810/334/141/917/56/100045265297b0.jpg', 4.6, 134, 0, true, false, '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'],
        ['–¢–≤–æ—Ä–æ–≥ 9% 200–≥', 95.90, null, 'https://tsx.x5static.net/i/800x800-fit/xdelivery/files/8e/f2/0e3454381148c23ee98bbc315032.jpg', 4.5, 78, 0, true, false, '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'],
        ['–ô–æ–≥—É—Ä—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π 150–≥', 65.90, null, 'https://tsx.x5static.net/i/800x800-fit/xdelivery/files/e8/f6/a5f3aee518ff58c0ccd78c4ed7d8.jpg', 4.3, 92, 0, true, false, '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'],
        
        // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ
        ['–ì—Ä–µ—á–∫–∞ —è–¥—Ä–∏—Ü–∞ 800–≥', 115.90, null, 'https://baron.kz/image/cache/catalog/catalog/bakaleya/krupa-grechnevaya-yadrica-makfa-800-g-1200x800.jpg', 4.8, 312, 0, false, true, '–ö—Ä—É–ø—ã'],
        ['–†–∏—Å –∫—Ä—É–≥–ª–æ–∑–µ—Ä–Ω—ã–π 1–∫–≥', 89.90, null, 'https://swlife.ru/image/cache/catalog/product/9e/e2/9ee21afb67ba78ff9df8708341ed4a6f-0x0.webp', 4.7, 278, 0, false, true, '–ö—Ä—É–ø—ã'],
        ['–ú–∞–∫–∞—Ä–æ–Ω—ã —Å–ø–∞–≥–µ—Ç—Ç–∏ 500–≥', 75.90, null, 'https://www.miamland.com/bundles/miamland/images/visuel/400/3038350208613-400.webp', 4.5, 189, 0, false, true, '–ú–∞–∫–∞—Ä–æ–Ω–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è'],
        ['–°–∞—Ö–∞—Ä-–ø–µ—Å–æ–∫ 1–∫–≥', 55.90, null, 'https://sibprod.info/upload/resize_cache/iblock/6f8/1800_1200_19d1669f6609e6dfcaeac28e5aab5b3be/6f8b9276f69bd008fa13ef3c0f38a64c.jpg', 4.6, 156, 0, false, true, '–°–∞—Ö–∞—Ä –∏ –ø–æ–¥—Å–ª–∞—Å—Ç–∏—Ç–µ–ª–∏']
      ];

      for (const product of testProducts) {
        await pool.query(`
          INSERT INTO products (name, price, original_price, image, rating, reviews, discount, is_new, is_popular, category)
          VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
        `, product);
      }
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    }

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü:', error);
  } finally {
    process.exit(0);
  }
};

createTables();
